@model FurnitureShop.Models.Order

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.OrderDate)
</div>
<div class="editor-field">
    @*Html.EditorFor(model => model.OrderDate)*@
    @*Html.TextBoxFor(model => model.OrderDate, new { @class="date" })*@
    @Html.EditorFor(model => model.OrderDate)
    @Html.ValidationMessageFor(model => model.OrderDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ShippingDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ShippingDate)
    @Html.ValidationMessageFor(model => model.ShippingDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.DeliveryDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.DeliveryDate)
    @Html.ValidationMessageFor(model => model.DeliveryDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.TrackingNumber)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.TrackingNumber)
    @Html.ValidationMessageFor(model => model.TrackingNumber)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Note)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Note)
    @Html.ValidationMessageFor(model => model.Note)
</div>

<div class="editor-label">
    User
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.UserId, ((IEnumerable<FurnitureShop.Models.User>)ViewBag.PossibleUsers).Select(option => new SelectListItem
{
    Text = (option == null ? "None" : option.Name),
    Value = option.UserId.ToString(),
    Selected = (Model != null) && (option.UserId == Model.UserId)
}), "Choose...")
    @Html.ValidationMessageFor(model => model.UserId)
</div>
<div class="editor-label">
    OrderDelivery
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.OrderDeliveryId, ((IEnumerable<FurnitureShop.Models.OrderDelivery>)ViewBag.PossibleOrderDeliveries).Select(option => new SelectListItem
{
    Text = option.Methode.ToString(), @*Html.DisplayTextFor(_ => option).ToString(), *@
    Value = option.OrderDeliveryId.ToString(),
    Selected = (Model != null) && (option.OrderDeliveryId == Model.OrderDeliveryId)
}), "Choose...")
    @Html.ValidationMessageFor(model => model.OrderDeliveryId)
</div>
