@model FurnitureShop.Models.Order

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div class="editor-label">
        @Html.LabelFor(model => model.OrderDate)
    </div>
    <div class="editor-field">
        @*Html.EditorFor(model => model.OrderDate, new { @Value = System.DateTime.Today })*@
        @Html.TextBox("date", DateTime.Now.ToShortDateString())
        @*Html.TextBoxFor(model => model.OrderDate, new { @class="date" })*@
        @*Html.TextBoxFor(model => model.OrderDate, "{0:dd-MM-yyyy}")*@
        @Html.ValidationMessageFor(model => model.OrderDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ShippingDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ShippingDate)
        @Html.ValidationMessageFor(model => model.ShippingDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.DeliveryDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.DeliveryDate)
        @Html.ValidationMessageFor(model => model.DeliveryDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.TrackingNumber)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.TrackingNumber)
        @Html.ValidationMessageFor(model => model.TrackingNumber)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Note)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Note)
        @Html.ValidationMessageFor(model => model.Note)
    </div>

    <div class="editor-label">
        User
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(x => x.UserId, new { @Value = ViewBag.UserId, @type = "hidden" })
        @ViewBag.UserId
        @Html.ValidationMessageFor(model => model.UserId)

    </div>
    <div class="editor-label">
        OrderDelivery
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.OrderDeliveryId, ((IEnumerable<FurnitureShop.Models.OrderDelivery>)ViewBag.PossibleOrderDeliveries).Select(option => new SelectListItem
{
    Text = option.Methode.ToString(),
    Value = option.OrderDeliveryId.ToString(),
    Selected = (Model != null) && (option.OrderDeliveryId == Model.OrderDeliveryId)
}), "Choose...")
        @Html.ValidationMessageFor(model => model.OrderDeliveryId)
    </div>
    <p>
        <input type="submit" value="Create" />
    </p>
}
